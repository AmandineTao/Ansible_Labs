- Vous disposez du ansible.cfg a mettre dans votre projet
- Créez un fichier hosts.ini au format INI avec les modalités d’inventaire suivant
- Tous les hôtes via le groupe « all » devront avoir pour login user vagrant
- Le client devra faire partie d’un groupe appeler « prod »
- Le mot de passe à utiliser pour toutes connexion ssh devra être vagrant pour toutes les machines du groupe « prod »
- La variable « env » devra être égale à « production » pour toutes les machines du groupe « prod »
- Créez ensuite un fichier hosts.yaml, version yaml du fichier ini
- Testez les commandes ad-hoc de ping et setup avec les deux fichiers d’inventaires
- Avec une commande ad hoc, afficher toutes les machines de l'inventaire
- Avec une commande ad hoc, afficher les machines du groupe prod 
- Avec une commande ad hoc, afficher la machine client1 
- Utiliser la commande ansible-inventory pour afficher l'inventaire sous forme de graphe
- Utiliser la commande ansible-inventory pour afficher les variables associée à la machine client1
- Modifier le port d'ecoute du ssh sur le client1 en le mettant en 2222
- Tester une commande  vers ce client et confirmer que c'est KO
- Adapter l'inventaire afin de pourvoir setter le port de connexion ssh sur ce client
    - variable ansible_port=2222
- Rajouter le serveur ansible à l'inventaire, dans un groupe controle avec une connexion local (pas de ssh)
    - variable ansible_connection=local
- Tester de nouveau la commande ping sur tous les hôtes
- Transformer l'inventaire YAML en JSON avec la commande suivante : 
    python3 -c 'import sys, yaml, json; json.dump(yaml.load(sys.stdin, Loader=yaml.FullLoader), sys.stdout, indent=4)' < hosts.yaml > hosts.json
- Tester vos commandes ad hoc en utilisant l'inventaire au format json et validez que tout fonctionne bien    